name: Sonarqube Scan C#
agent:
    type: Unity::metal::macmini
    image: package-ci/mac
    flavor: m1.mac
variables:
    PROJECT_PATH: ArmRobot
    SONARQUBE_PROJECT_KEY: ai-robotics-articulations-robot-demo-csharp
    SONARQUBE_PROJECT_BASE_DIR: /Users/bokken/build/output/Unity-Technologies/articulations-robot-demo/ArmRobot
    MSBUILD_SLN_PATH: ./ArmRobot/ArmRobot.sln
commands:
    - npm install upm-ci-utils@stable -g --registry https://artifactory.prd.it.unity3d.com/artifactory/api/npm/upm-npm
    - unity-downloader-cli -u 2020.3.11f1 -c Editor
    - brew install mono corretto
    - curl https://github.com/SonarSource/sonar-scanner-msbuild/releases/download/5.2.1.31210/sonar-scanner-msbuild-5.2.1.31210-net46.zip -o sonar-scanner-msbuild-net46.zip -L
    - unzip sonar-scanner-msbuild-net46.zip -d ~/sonar-scanner-msbuild
    - chmod a+x ~/sonar-scanner-msbuild/sonar-scanner-4.6.1.2450/bin/sonar-scanner
    - .Editor/Unity.app/Contents/MacOS/Unity -projectPath $PROJECT_PATH -batchmode -quit -nographics -logFile - -executeMethod "UnityEditor.SyncVS.SyncSolution"
    - command: |
        cd $PROJECT_PATH
        for file in *.csproj; do sed -i.backup "s/^[[:blank:]]*<ReferenceOutputAssembly>false<\/ReferenceOutputAssembly>/<ReferenceOutputAssembly>true<\/ReferenceOutputAssembly>/g" $file; rm $file.backup; done
        cd ../
    - mono ~/sonar-scanner-msbuild/SonarScanner.MSBuild.exe begin /k:$SONARQUBE_PROJECT_KEY /d:sonar.host.url=$SONARQUBE_ENDPOINT_URL_PRD /d:sonar.login=$SONARQUBE_TOKEN_PRD /d:sonar.projectBaseDir=$SONARQUBE_PROJECT_BASE_DIR
    - msbuild $MSBUILD_SLN_PATH
    - mono ~/sonar-scanner-msbuild/SonarScanner.MSBuild.exe end /d:sonar.login=$SONARQUBE_TOKEN_PRD
triggers:
    cancel_old_ci: true
    expression: |
        ((pull_request.target eq "main" OR pull_request.target eq "dev")
        AND NOT pull_request.push.changes.all match "**/*.md") OR
        (push.branch eq "main" OR push.branch eq "dev")